// This file is auto-generated by @hey-api/openapi-ts

export type Counter = {
  readonly id: number;
  value?: number;
};

export type Message = {
  message: string;
};

export type MockResponse = {
  readonly id: number;
  response: string;
};

export type PaginatedMockResponseList = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<MockResponse>;
};

export type PaginatedUserList = {
  count: number;
  next?: string | null;
  previous?: string | null;
  results: Array<User>;
};

export type PatchedMockResponse = {
  readonly id?: number;
  response?: string;
};

export type PatchedUser = {
  readonly id?: number;
  email?: string;
  /**
   * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
   */
  is_active?: boolean;
  /**
   * Designates whether the user can log into this admin site.
   */
  is_staff?: boolean;
  /**
   * Designates that this user has all permissions without explicitly assigning them.
   */
  is_superuser?: boolean;
  readonly created?: string;
  readonly modified?: string;
  last_login?: string | null;
};

export type User = {
  readonly id: number;
  email: string;
  /**
   * Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
   */
  is_active?: boolean;
  /**
   * Designates whether the user can log into this admin site.
   */
  is_staff?: boolean;
  /**
   * Designates that this user has all permissions without explicitly assigning them.
   */
  is_superuser?: boolean;
  readonly created: string;
  readonly modified: string;
  last_login?: string | null;
};

export type ApiCounterIncrementCreateData = {
  requestBody?: Counter;
};

export type ApiCounterIncrementCreateResponse = Counter;

export type ApiRestRestCheckRetrieveResponse = Message;

export type ApiTestResponseListData = {
  /**
   * Number of results to return per page.
   */
  limit?: number;
  /**
   * The initial index from which to return the results.
   */
  offset?: number;
};

export type ApiTestResponseListResponse = PaginatedMockResponseList;

export type ApiTestResponseCreateData = {
  requestBody: MockResponse;
};

export type ApiTestResponseCreateResponse = MockResponse;

export type ApiTestResponseRetrieveData = {
  /**
   * A unique integer value identifying this mock response.
   */
  id: number;
};

export type ApiTestResponseRetrieveResponse = MockResponse;

export type ApiTestResponseUpdateData = {
  /**
   * A unique integer value identifying this mock response.
   */
  id: number;
  requestBody: MockResponse;
};

export type ApiTestResponseUpdateResponse = MockResponse;

export type ApiTestResponsePartialUpdateData = {
  /**
   * A unique integer value identifying this mock response.
   */
  id: number;
  requestBody?: PatchedMockResponse;
};

export type ApiTestResponsePartialUpdateResponse = MockResponse;

export type ApiTestResponseDestroyData = {
  /**
   * A unique integer value identifying this mock response.
   */
  id: number;
};

export type ApiTestResponseDestroyResponse = void;

export type ApiTestResponseFetchByKeywordCreateData = {
  requestBody: MockResponse;
};

export type ApiTestResponseFetchByKeywordCreateResponse = MockResponse;

export type ApiUsersListData = {
  /**
   * Number of results to return per page.
   */
  limit?: number;
  /**
   * The initial index from which to return the results.
   */
  offset?: number;
};

export type ApiUsersListResponse = PaginatedUserList;

export type ApiUsersCreateData = {
  requestBody: User;
};

export type ApiUsersCreateResponse = User;

export type ApiUsersRetrieveData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
};

export type ApiUsersRetrieveResponse = User;

export type ApiUsersUpdateData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
  requestBody: User;
};

export type ApiUsersUpdateResponse = User;

export type ApiUsersPartialUpdateData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
  requestBody?: PatchedUser;
};

export type ApiUsersPartialUpdateResponse = User;

export type ApiUsersDestroyData = {
  /**
   * A unique integer value identifying this user.
   */
  id: number;
};

export type ApiUsersDestroyResponse = void;

export type $OpenApiTs = {
  "/api/counter/increment/": {
    post: {
      req: ApiCounterIncrementCreateData;
      res: {
        200: Counter;
      };
    };
  };
  "/api/rest/rest-check/": {
    get: {
      res: {
        200: Message;
      };
    };
  };
  "/api/test-response/": {
    get: {
      req: ApiTestResponseListData;
      res: {
        200: PaginatedMockResponseList;
      };
    };
    post: {
      req: ApiTestResponseCreateData;
      res: {
        201: MockResponse;
      };
    };
  };
  "/api/test-response/{id}/": {
    get: {
      req: ApiTestResponseRetrieveData;
      res: {
        200: MockResponse;
      };
    };
    put: {
      req: ApiTestResponseUpdateData;
      res: {
        200: MockResponse;
      };
    };
    patch: {
      req: ApiTestResponsePartialUpdateData;
      res: {
        200: MockResponse;
      };
    };
    delete: {
      req: ApiTestResponseDestroyData;
      res: {
        /**
         * No response body
         */
        204: void;
      };
    };
  };
  "/api/test-response/fetch_by_keyword/": {
    post: {
      req: ApiTestResponseFetchByKeywordCreateData;
      res: {
        200: MockResponse;
      };
    };
  };
  "/api/users/": {
    get: {
      req: ApiUsersListData;
      res: {
        200: PaginatedUserList;
      };
    };
    post: {
      req: ApiUsersCreateData;
      res: {
        201: User;
      };
    };
  };
  "/api/users/{id}/": {
    get: {
      req: ApiUsersRetrieveData;
      res: {
        200: User;
      };
    };
    put: {
      req: ApiUsersUpdateData;
      res: {
        200: User;
      };
    };
    patch: {
      req: ApiUsersPartialUpdateData;
      res: {
        200: User;
      };
    };
    delete: {
      req: ApiUsersDestroyData;
      res: {
        /**
         * No response body
         */
        204: void;
      };
    };
  };
};
